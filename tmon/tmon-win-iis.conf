# Telegraf Configuration

# Configuration for telegraf agent
[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "30s"
  flush_jitter = "0s"
  precision = ""
  debug = true
  quiet = false
  logtarget = "file"
  logfile = "c:/program files/transpara/tMon-telegraf/tmon-win-iis.log"
  logfile_rotation_interval = "24h"
  logfile_rotation_max_size = "0MB"
  logfile_rotation_max_archives = 5
  log_with_timezone = "UTC"

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


# Run executable as long-running output plugin
[[outputs.execd]]
  command = ["C:/program files/transpara/tmon-telegraf/output_tstore","http://tstore-api:80/api/v1/write"] # TSYSTEM
  restart_delay = "10s"
  data_format = "json"

[[outputs.file]]
  files = ["c:/program files/transpara/tmon-telegraf/tmon-win-iis.out"]
  rotation_interval = "1h"
  rotation_max_size = "100MB"
  rotation_max_archives = 5
  data_format = "json"


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.mem]]
  name_prefix = "win_"
  fieldpass = [
    "total",
    "used",
    "used_percent",
    "available_percent"
    ]

[[inputs.system]]
  name_prefix = "win_"
  fieldpass = [
    "n_cpus"
    ]

[[inputs.win_perf_counters]]
  [[inputs.win_perf_counters.object]]
    # Processor usage, alternative to native, reports on a per core.
    ObjectName = "Processor"
    Instances = ["_Total"]
    Counters = [
      "% Idle Time",
      "% Interrupt Time",
      "% Privileged Time",
      "% User Time",
      "% Processor Time",
      "Interrupts/sec"
    ]
    Measurement = "win_cpu"
    IncludeTotal=true #Set to true to include _Total instance when querying for all (*).

    [[inputs.win_perf_counters.object]]
    # Per CPU Processor usage
    ObjectName = "Processor"
    Instances = ["*"]
    Counters = ["% Processor Time"]
    Measurement = "win_cpu"
    IncludeTotal=false #Set to true to include _Total instance when querying for all (*).

  [[inputs.win_perf_counters.object]]
    # Read metrics about memory usage
    ObjectName = "Memory"
    Counters = [
      "Available Bytes",
      "Cache Bytes",
      "Pages/sec",
      "Pages Input/sec",
      "Pool Nonpaged Bytes",
      "Pool Paged Bytes",
      "Free System Page Table Entries",
    ]
    Instances = ["------"] # Use 6 x - to remove the Instance bit from the query.
    Measurement = "win_mem"
    #IncludeTotal=false #Set to true to include _Total instance when querying for all (*).

  [[inputs.win_perf_counters.object]]
    # System metrics
    ObjectName = "System"
    Instances = ["------"] # Use 6 x - to remove the Instance bit from the query.
    Counters = [
      "Processes",
      "System Up Time",
      "Context Switches/sec",
      "System Calls/sec",
      "Processor Queue Length",
      "Threads"
    ]    
    Measurement = "win_system"
    #IncludeTotal=false #Set to true to include _Total instance when querying for all (*).

  [[inputs.win_perf_counters.object]]
    # Disk times and queues for total logical disk
    ObjectName = "LogicalDisk"
    Instances = ["_Total"]
    Counters = [
      "% Free Space",
      "Free Megabytes",
      "Avg. Disk sec/Read",
      "Avg. Disk sec/Write",
      "Disk Transfers/sec",
      "Current Disk Queue Length",
      "Avg. Disk Queue Length",
      "Disk Read Bytes/sec",
      "Disk Write Bytes/sec",
      "% Disk Time",
      "% Disk Read Time",
      "% Disk Write Time",
    ]
    Measurement = "win_disk"
    IncludeTotal=true #Set to true to include _Total instance when querying for all (*).
 
  [[inputs.win_perf_counters.object]]
    # Free Logical disk space per disk mounted on the system
    ObjectName = "LogicalDisk"
    Instances = ["*"]
    Counters = [
      "% Free Space",
      "Free Megabytes",
    ]
    Measurement = "win_disk"
    IncludeTotal=false #Set to true to include _Total instance when querying for all (*).	

  [[inputs.win_perf_counters.object]]
    # Read metrics about Phisical Disk
    ObjectName = "PhysicalDisk"
    Instances = ["*"]
    Counters = [
      "Disk Read Bytes/sec",
      "Disk Write Bytes/sec",
      "Avg. Disk Queue Length",
      "Current Disk Queue Length",
      "Avg. Disk sec/Read",
      "Avg. Disk sec/Write",
      "Split IO/sec"
    ]
    Measurement = "win_diskio"
    IncludeTotal=true #Set to true to include _Total instance when querying for all (*).

  [[inputs.win_perf_counters.object]]
    # Counters for the Network Interface Object
    ObjectName = "Network Interface"
    Instances = ["*"] # Use 6 x - to remove the Instance bit from the query.
    Counters = [
      "Bytes Received/sec",
      "Bytes Sent/sec",
      "Packets Received/sec",
      "Packets Sent/sec",
      "Current Bandwidth"
    ] 
    Measurement = "win_net"
    IncludeTotal=true #Set to true to include _Total instance when querying for all (*).

  [[inputs.win_perf_counters.object]]
    # W3WP request and response information
    ObjectName = "W3SVC_W3WP"
    Instances = ["_Total"]
    Counters = [
      "Active Requests",
      "Requests / Sec",
      "% 500 HTTP Response Sent",
      "% 401 HTTP Response Sent",
      "% 403 HTTP Response Sent",
      "% 404 HTTP Response Sent"
    ]
    Measurement = "win_iis"
    IncludeTotal=true #Set to true to include _Total instance when querying for all (*).

  [[inputs.win_perf_counters.object]]
    # HTTP Service request queues in the Kernel before being handed over to User Mode.
    ObjectName = "HTTP Service Request Queues"
    Instances = ["DefaultAppPool"]
    Counters = [
      "CurrentQueueSize",
      "RejectedRequests"
      ]
    Measurement = "win_iis"
    IncludeTotal=true #Set to true to include _Total instance when querying for all (*).

  [[inputs.win_perf_counters.object]]
    # IIS, Web Service
    ObjectName = "Web Service"
    Instances = ["Default Web Site", "_Total"]
    Counters = [
      "Total Method Requests/sec",
      "Get Requests/sec",
      "Post Requests/sec",
      "Service Uptime",
      "Connection Attempts/sec",
      "Current Connections"
      ]
    Measurement = "win_iis"
    IncludeTotal=true #Set to true to include _Total instance when querying for all (*).
 
 # Read metrics about services (state and startup mode)
 [[inputs.win_services]]  
    ## Names of the services to monitor. Leave empty to monitor all the available services on the host. Globs accepted. Case sensitive.
    service_names = [
	    "tmon-telegraf",
	  ]
	
 # Read metrics about services (cpu usage and memory usage)	
 [[inputs.procstat]]
     win_service = "tmon-telegraf"
     pid_finder = "native"
     name_prefix = "win_"
     taginclude = ["host","win_service"]
     fieldpass = ["cpu_usage","memory_usage","memory_rss"]
